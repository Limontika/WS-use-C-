orders-- MySQL Script generated by MySQL Workbench
-- Чт 19 дек 2019 11:39:46
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`roles` (
  `id` INT NOT NULL,
  `title` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`users` (
  `id` INT NOT NULL,
  `login` VARCHAR(100) NOT NULL,
  `password` VARCHAR(40) NOT NULL,
  `role_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC),
  INDEX `fk_users_roles_idx` (`role_id` ASC),
  CONSTRAINT `fk_users_roles`
    FOREIGN KEY (`role_id`)
    REFERENCES `mydb`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`units`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`units` (
  `id` INT NOT NULL,
  `name` VARCHAR(25) NOT NULL,
  `short_name` VARCHAR(10) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`products` (
  `vendor_code` INT NOT NULL,
  `name` VARCHAR(250) NOT NULL,
  `quantity` INT NOT NULL,
  `width` INT NOT NULL,
  `height` INT NOT NULL,
  `unit_id` INT NOT NULL,
  PRIMARY KEY (`vendor_code`),
  UNIQUE INDEX `vendor_code_UNIQUE` (`vendor_code` ASC),
  INDEX `fk_products_units1_idx` (`unit_id` ASC),
  CONSTRAINT `fk_products_units1`
    FOREIGN KEY (`unit_id`)
    REFERENCES `mydb`.`units` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`rolls`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`rolls` (
  `vendor_code` VARCHAR(100) NOT NULL,
  `composition` VARCHAR(45) NOT NULL,
  `color` VARCHAR(45) NOT NULL,
  `width` INT NOT NULL,
  `height` INT NOT NULL,
  PRIMARY KEY (`vendor_code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`rolls_has_products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`rolls_has_products` (
  `rolls_vendor_code` VARCHAR(100) NOT NULL,
  `products_vendor_code` INT NOT NULL,
  PRIMARY KEY (`rolls_vendor_code`, `products_vendor_code`),
  INDEX `fk_rolls_has_products_products1_idx` (`products_vendor_code` ASC),
  INDEX `fk_rolls_has_products_rolls1_idx` (`rolls_vendor_code` ASC),
  CONSTRAINT `fk_rolls_has_products_rolls1`
    FOREIGN KEY (`rolls_vendor_code`)
    REFERENCES `mydb`.`rolls` (`vendor_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rolls_has_products_products1`
    FOREIGN KEY (`products_vendor_code`)
    REFERENCES `mydb`.`products` (`vendor_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`orders` (
  `id` INT NOT NULL,
  `state` VARCHAR(45) NOT NULL,
  `created_at` VARCHAR(45) NOT NULL,
  `updated_at` VARCHAR(45) NOT NULL,
  `manager_id` INT NULL,
  `customer_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_orders_users1_idx` (`manager_id` ASC),
  INDEX `fk_orders_users2_idx` (`customer_id` ASC),
  CONSTRAINT `fk_orders_users1`
    FOREIGN KEY (`manager_id`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orders_users2`
    FOREIGN KEY (`customer_id`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`orders_has_products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`orders_has_products` (
  `orders_id` INT NOT NULL,
  `products_vendor_code` INT NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`orders_id`, `products_vendor_code`),
  INDEX `fk_orders_has_products_products1_idx` (`products_vendor_code` ASC),
  INDEX `fk_orders_has_products_orders1_idx` (`orders_id` ASC),
  CONSTRAINT `fk_orders_has_products_orders1`
    FOREIGN KEY (`orders_id`)
    REFERENCES `mydb`.`orders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orders_has_products_products1`
    FOREIGN KEY (`products_vendor_code`)
    REFERENCES `mydb`.`products` (`vendor_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
